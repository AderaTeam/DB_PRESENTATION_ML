version: '3.1'
 
      # poetry export -f requirements.txt > requirements_lock.txt &&
      # pip install -r requirements_lock.txt &&
      # cd src &&
services:

  image_generation_service:
    image: python:3.11
    working_dir: /app
    volumes:
      - ./image_generation_service/:/app/
    command:
      bash -c "pip install -r requirements.txt &&
      cd src &&
      uvicorn main:app --host 0.0.0.0 --port 8052"
    ports:
      - 11051:8052

  gpt_service:
    image: python:3.11
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    working_dir: /app
    volumes:
      - ./gpt_service/:/app/
    command:
      bash -c "apt install nvidia-cuda-toolkit &&
      pip install -r requirements.txt &&
      cd src &&
      uvicorn main:app --host 0.0.0.0 --port 8052"
    ports:
      - 10051:8052


  topic_modelling_service:
    image: python:3.11
    working_dir: /app
    volumes:
      - ./topic_modelling_service/:/app/
    command:
      bash -c "pip install -r requirements.txt &&
      cd src &&
      uvicorn main:app --host 0.0.0.0 --port 8052"
    networks:
      - topic_modelling_network
    ports:
      - 9051:8052


  presentation_generator_service:
    image: python:3.11
    working_dir: /app
    volumes:
      - ./presentation_generator_service/:/app/
    command:
      bash -c "pip install -r requirements.txt &&
      python3 -m spacy download ru_core_news_sm &&
      cd src &&
      uvicorn main:app --host 0.0.0.0 --port 8052"
      # bash -c "pip install poetry &&
      # poetry export -f requirements.txt > requirements_lock.txt &&
      # pip install -r requirements_lock.txt &&
      # cd src &&
      # uvicorn main:app --host 0.0.0.0 --port 8052"
    links:
     - topic_modelling_service
    networks:
      - topic_modelling_network
    ports:
      - 10051:8052
  

networks:
  topic_modelling_network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"
